<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.application.mediquanta.member.dao.MemberDAO">

	<!-- 회원가입 -->
	<insert id="createMember" parameterType="MemberDTO">
		INSERT INTO MEMBER (
			MEMBER_ID,
			PASSWD,
			NICKNAME,
			PROFILE_ORIGINAL_NAME,
			PROFILE_UUID,
			EMAIL,
			BIRTH,
			GENDER,
			ZIPCODE,
			ROAD_ADDRESS,
			LAND_ADDRESS,
			ETC_ADDRESS,
			ROLE,
			ACTIVE_YN,
			CREATED_AT,
			LAST_LOGIN
		) 
		VALUES (
			#{memberId},
			#{passwd},
			#{nickname},
			#{profileOriginalName},
			#{profileUUID},
			#{email},
			#{birth},
			#{gender},
			#{zipcode},
			#{roadAddress},
			#{landAddress},
			#{etcAddress},
			#{role},
			#{activeYn},
			#{createdAt},
			#{lastLogin}
		 )
	</insert>	
	
	<!-- 아이디 중복 체크 -->
	<select id="checkValidId" parameterType="String" resultType="String"> 
		SELECT MEMBER_ID
		FROM   MEMBER
		WHERE  MEMBER_ID = #{memberId}
	</select>

	<!-- 닉네임 중복 체크 -->
	<select id="checkValidNickname" parameterType="String" resultType="String"> 
		SELECT NICKNAME
		FROM   MEMBER
		WHERE  NICKNAME = #{nickname}
	</select>
	
	<!-- 이메일 중복 체크 -->
	<select id="checkValidEmail" parameterType="String" resultType="String"> 
		SELECT EMAIL
		FROM   MEMBER
		WHERE  EMAIL = #{email}
	</select>
	
	<!-- 회원 권한 조회 -->
	<select id="checkRole" parameterType="String" resultType="String"> 
		SELECT ROLE
		FROM   MEMBER
		WHERE  MEMBER_ID = #{memberId}
	</select>
	
	<!-- 로그인 -->
	<select id="login" parameterType="String" resultType="MemberDTO">
		SELECT	PASSWD,
				ACTIVE_YN
		FROM	MEMBER
		WHERE	MEMBER_ID = #{memberId}
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="getUserInfo" parameterType="String" resultType="MemberDTO">
		SELECT 	MEMBER_ID,
				PASSWD,
			    NICKNAME,
			    PROFILE_ORIGINAL_NAME,
				PROFILE_UUID,
			    EMAIL,
			    BIRTH,
			    GENDER,
			    ZIPCODE,
				ROAD_ADDRESS,
				LAND_ADDRESS,
				ETC_ADDRESS,
			    ROLE,
			    ACTIVE_YN,
			    CREATED_AT,
			    LAST_LOGIN
		FROM	MEMBER
		WHERE	MEMBER_ID = #{memberId}
	</select>

	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="MemberDTO">
	    UPDATE
	    		MEMBER
	    <set>
	    	<if test="profileOriginalName != null and profileOriginalName != ''">
				PROFILE_ORIGINAL_NAME = #{profileOriginalName},
			</if>
			<if test="profileUUID != null and !profileUUID != ''">
				PROFILE_UUID = #{profileUUID},
			</if>
			<if test="nickname != null and nickname != ''">
				NICKNAME = #{nickname},
			</if>
			<if test="nickname != null and nickname != ''">
				NICKNAME = #{nickname},
			</if>
			<if test="email != null and email != ''">
				EMAIL = #{email}, 
			</if>
			<if test="passwd != null and passwd != ''">
				PASSWD = #{passwd},
			</if>
			<if test="gender != null and gender != ''">
				GENDER = #{gender},
			</if>
			<!-- birth 필드는 java.util.Date 타입이므로, null 체크만 수행합니다. -->
			<!-- MyBatis는 자동으로 자바의 Date 객체를 데이터베이스의 날짜 형식으로 변환하여 사용합니다 -->
			<if test="birth != null">
				BIRTH = #{birth},
			</if>
			<if test="zipcode != null and zipcode != ''">
				ZIPCODE = #{zipcode},
			</if>
			<if test="roadAddress != null and roadAddress != ''">
				ROAD_ADDRESS = #{roadAddress},
			</if>
			<if test="landAddress != null and landAddress != ''">
				LAND_ADDRESS = #{landAddress},
			</if>
			<if test="etcAddress != null and etcAddress != ''">
				ETC_ADDRESS = #{etcAddress},
			</if>
			<if test="activeYn != null and activeYn != ''">
				ACTIVE_YN = #{activeYn}
			</if>
	    </set>
	    WHERE MEMBER_ID = #{memberId}
	</update>
	
	<!-- 회원 전체 목록 조회 -->
	<select id="getMemberList" resultType="MemberDTO">
		SELECT  NICKNAME,
			    PROFILE_ORIGINAL_NAME,
				PROFILE_UUID,
			    EMAIL,
			    GENDER,
			    ZIPCODE,
				ROAD_ADDRESS,
				LAND_ADDRESS,
				ETC_ADDRESS,
			    ROLE,
			    ACTIVE_YN,
			    CREATED_AT,
			    LAST_LOGIN
		FROM	MEMBER
	</select>
	
	<!-- 회원 권한 현황 조회 -->
	<select id="getRoleCount" resultType="map">
		SELECT
	        SUM(CASE WHEN ROLE = 'ADMIN' THEN 1 ELSE 0 END) AS adminCount,
	        SUM(CASE WHEN ROLE = 'USER' THEN 1 ELSE 0 END) AS userCount
    	FROM MEMBER
	</select>
	
	<!-- 회원 성별 현황 조회 -->
	<select id="getGenderCount" resultType="map">
		SELECT
			SUM(CASE WHEN GENDER = 'M' THEN 1 ELSE 0 END) AS maleCount,
	        SUM(CASE WHEN GENDER = 'F' THEN 1 ELSE 0 END) AS femaleCount
		FROM MEMBER
	</select>
	
	<!-- 회원 상태 현황 조회 -->
	<select id="getActiveCount" resultType="map">
		SELECT
			SUM(CASE WHEN ACTIVE_YN = 'y' THEN 1 ELSE 0 END) AS activeCount,
	        SUM(CASE WHEN ACTIVE_YN = 'n' THEN 1 ELSE 0 END) AS inactiveCount
		FROM MEMBER
	</select>
	
	<!-- 비밀번호 재발급 -->
	<update id="setTempPassword" parameterType="map">
		UPDATE 	MEMBER
		SET		PASSWD = #{authNum}
		WHERE	EMAIL = #{email}
	</update>
</mapper>